<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hforum.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.hforum.model.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_head" jdbcType="VARCHAR" property="userHead" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="cell_phone_number" jdbcType="BIGINT" property="cellPhoneNumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="activate_key" jdbcType="VARCHAR" property="activateKey" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="user_status" jdbcType="BIGINT" property="userStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_head, email, cell_phone_number, password, activate_key, 
    register_time, user_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.hforum.model.User">
    insert into user (user_id, user_name, user_head, 
      email, cell_phone_number, password, 
      activate_key, register_time, user_status
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userHead,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{cellPhoneNumber,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, 
      #{activateKey,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hforum.model.User" useGeneratedKeys="true"  keyProperty="userId">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userHead != null">
        user_head,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="cellPhoneNumber != null">
        cell_phone_number,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="activateKey != null">
        activate_key,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="cellPhoneNumber != null">
        #{cellPhoneNumber,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="activateKey != null">
        #{activateKey,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hforum.model.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userHead != null">
        user_head = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="cellPhoneNumber != null">
        cell_phone_number = #{cellPhoneNumber,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="activateKey != null">
        activate_key = #{activateKey,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hforum.model.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_head = #{userHead,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      cell_phone_number = #{cellPhoneNumber,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      activate_key = #{activateKey,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=BIGINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  
  
   <!-- customer -->

    <resultMap id="UserResultMap" type="com.example.hforum.model.User"
               extends="BaseResultMap">
        <!-- 多对多关联映射：collection -->
        <collection property="setRole" ofType="com.example.hforum.model.Role">
            <id column="role_id" jdbcType="BIGINT" property="roleId"/>
            <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
            <result column="role_type" jdbcType="VARCHAR" property="roleType"/>
        </collection>
    </resultMap>

    <!-- 根据用户Email查询该用户的信息和权限 -->

   <select id="loadSelective" parameterType="com.example.hforum.model.User"
            resultMap="UserResultMap">
        select u.*,r.*
        from user u
        left outer join user_role ur
        on  u.user_id = ur.uid
        left outer join role r
        on r.role_id=ur.rid
        where 1=1
        <if test="email != null">
            and  email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="cellPhoneNumber != null">
            and  cell_phone_number = #{cellPhoneNumber,jdbcType=BIGINT}
        </if>
    </select>

    <sql id="whereCondition">
        <!-- 注：CONCAT是mysql数据库中才有的 -->
        <if test="userName != null and !&quot;&quot;.equals(userName.trim())">
            and user_name like concat('%',trim(#{userName,jdbcType=VARCHAR}),'%')
        </if>
    </sql>

    <select id="list" parameterType="com.example.hforum.model.User" resultMap="BaseResultMap">
        select * from user
        <where>
            <include refid="whereCondition"></include>
        </where>
    </select>

  <select id="selectByEmail" parameterType="com.example.hforum.model.User" resultMap="BaseResultMap">
       select * from user where email = #{email,jdbcType=VARCHAR}
  </select>

  <select id="selectByActivateKey" parameterType="com.example.hforum.model.User" resultMap="BaseResultMap">
    select * from user where  activate_key = #{activateKey,jdbcType=VARCHAR}
  </select>
</mapper>